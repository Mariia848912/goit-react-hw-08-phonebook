{"version":3,"file":"static/js/296.50f53792.chunk.js","mappings":"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","sources":["components/Container/Container.styled.jsx","components/Container/Container.jsx","components/utils/getValitadionSchemaContactsForm.js","redux/contacts/selectors.js","components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsListItem/ContactsListItem.styled.jsx","components/ContactsListItem/ContactsListItem.jsx","components/IsEmpty/IsEmpty.styled.jsx","components/IsEmpty/IsEmpty.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ErrorText/ErrorText.styled.jsx","components/ErrorText/ErrorText.jsx","pages/Contacts.styled.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Box = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  padding: 0 16px;\n  padding-bottom: 16px;\n\n  text-align: center;\n\n  @media screen and (min-width: 452px) {\n    max-width: 452px;\n  }\n`;\n","\nimport PropTypes from 'prop-types';\nimport { Box } from \"./Container.styled\";\n\nexport const Container = ({ children }) => (\n    <Box>{children}</Box>\n)\n\nContainer.propTypes = {\n    children: PropTypes.node.isRequired\n}","import * as yup from 'yup';\n\nexport function getValidationSchema() {\n  const phoneRegExp =\n    /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n  const nameRegExp =\n    /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\n  const nameValidationText =\n    \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\";\n  const phoneValidationText =\n    'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +';\n\n  return yup.object().shape({\n    name: yup\n      .string()\n      .required('Name is a required field')\n      .matches(nameRegExp, nameValidationText),\n    number: yup\n      .string()\n      .required('Number is a required field')\n      .matches(phoneRegExp, phoneValidationText),\n  });\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter.value;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (items, value) => {\n    const normalizedFilter = value.toLowerCase();\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import styled from 'styled-components';\n\n\nexport const FormPhonebook = styled.div`\n  margin: 20px 0;\n  padding: 20px;\n \n  border: 0.4px solid rgba(25, 118, 210, 0.5);\n  border-radius: 4px;\n\n  @media screen and (min-width: 452px) {\n    padding: 41px;\n      }\n`;\n\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport { getValidationSchema } from '../utils/getValitadionSchemaContactsForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { Button, TextField } from '@mui/material';\nimport { FormPhonebook } from './ContactsForm.styled';\n\nexport const ContactsForm = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n    },\n    validationSchema: getValidationSchema,\n    onSubmit: (values, actions) => {\n      const name = values.name;\n      const number = values.number;\n\n      const checkName = contacts.some(\n        item => item.name.toLowerCase() === name.toLowerCase()\n      );\n      const checkPhone = contacts.some(item => {\n        const statePhone = parseInt(number.replace(/[^\\d]/g, ''));\n        const newPhone = parseInt(item.number.replace(/[^\\d]/g, ''));\n        return statePhone === newPhone;\n      });\n      if (checkName) {\n        actions.resetForm();\n        return window.alert(`${name} is already in contacts`);\n      }\n      if (checkPhone) {\n        actions.resetForm();\n        return window.alert(`${number} is already in contacts`);\n      }\n      dispatch(addContact(values));\n      actions.resetForm();\n    },\n  });\n\n  return (\n    <FormPhonebook>\n      <form onSubmit={formik.handleSubmit}>\n        <TextField\n          id=\"name\"\n          name=\"name\"\n          label=\"Name\"\n          type=\"text\"\n          fullWidth\n          size=\"small\"         \n          style={{ marginBottom: '20px' }}\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n\n        <TextField\n          id=\"number\"\n          name=\"number\"\n          label=\"Number\"\n          type=\"tel\"\n          fullWidth\n          size=\"small\"      \n          style={{ marginBottom: '20px' }}\n          value={formik.values.number}\n          onChange={formik.handleChange}\n          error={formik.touched.number && Boolean(formik.errors.number)}\n          helperText={formik.touched.number && formik.errors.number}\n        />\n\n        <Button\n          color=\"primary\"\n          style={{ marginTop: '10px', textTransform: 'none' }}\n          variant=\"contained\"\n          fullWidth\n          type=\"submit\"\n        >\n          Add contact\n        </Button>\n      </form>\n    </FormPhonebook>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n\n  justify-content: center;\n  flex-direction: column;\n\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 420px;\n\n  text-align: left;\n`;\n","import styled from 'styled-components';\n\nexport const ItemContact = styled.li`\n  display: flex;\n  align-items: center;\n\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n`;\n\nexport const ContactData = styled.p`\n  margin-right: 10px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 6px;\n  width: 328px;\n\n  background-color: #f5f4fa;\n  border-radius: 4px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { ItemContact, ContactData } from './ContactsListItem.styled';\nimport PropTypes from 'prop-types';\nimport { Button } from '@mui/material';\n\nexport const ContactsListItem = ({ name, id, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <ItemContact>\n        <ContactData>\n          {name}: {number}\n        </ContactData>\n\n        <Button\n          variant=\"outlined\"\n          href=\"#outlined-buttons\"\n          size=\"small\"\n          type=\"submit\"\n          style={{ fontSize: 14, textTransform: 'none', marginLeft: 'auto' }}\n          onClick={() => dispatch(deleteContact(id))}\n        >\n          Delete\n        </Button>\n      </ItemContact>\n    </>\n  );\n};\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 14px;\n\n  width: 420px;\n  text-align: start;\n`;\n","import PropTypes from 'prop-types';\nimport { Text } from './IsEmpty.styled';\n\nexport const IsEmpty = ({ name }) => {\n  return <Text>The {name} is empty.</Text>;\n};\n\nIsEmpty.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { List } from './ContactsList.styled';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { ContactsListItem } from '../ContactsListItem/ContactsListItem';\nimport { IsEmpty } from 'components/IsEmpty/IsEmpty';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <>\n      {contacts.length === 0 ? (\n        <IsEmpty name={'contact list'} />\n      ) : (\n        <List>\n          {contacts.map(({ id, name, number }) => (\n            <ContactsListItem key={id} id={id} name={name} number={number} />\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ComponentContainer = styled.div`\n  text-align: left;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setStatusFilter } from '../../redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport TextField from '@mui/material/TextField';\nimport { ComponentContainer } from './Filter.styled';\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = e => {\n    dispatch(setStatusFilter(e.currentTarget.value));\n  };\n  return (\n    <ComponentContainer>\n      <TextField\n        id=\"filter\"\n        size=\"small\"\n        label=\"Find contacts by name\"\n        variant=\"outlined\"\n        value={filter.value}\n        onChange={handleChange}\n        style={{ marginBottom: '20px', width: '328px', marginTop: 20 }}\n      />\n    </ComponentContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Error = styled.p`\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  /* padding-left: 14px; */\n\n  width: 420px;\n  text-align: start;\n`;\n","import { Error } from \"./ErrorText.styled\";\n\nexport const ErrorText = () =>\n    <Error>\n        Whoops, something went wrong. Try later.\n    </Error>\n","import styled from 'styled-components';\n\nexport const Tittle = styled.h2`\nmargin-top: 20px;\n`\nexport const SecondTittle = styled.h3`\nmargin-top: 40px;\n\n`","import { Container } from '../components/Container/Container';\nimport { ContactsForm } from '../components/ContactsForm/ContactsForm';\nimport { ContactsList } from '../components/ContactsList/ContactsList';\nimport { Filter } from '../components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { LinearProgress } from '@mui/material';\nimport { ErrorText } from 'components/ErrorText/ErrorText';\nimport { SecondTittle, Tittle } from './Contacts.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <LinearProgress />}\n      <Container>\n        <Tittle>Phonebook</Tittle>\n        <ContactsForm />\n        <SecondTittle>Contacts</SecondTittle>\n        <Filter />\n        {!isLoading && error !== 'get' && <ContactsList />}\n        {error === 'get' && <ErrorText />}\n      </Container>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Box","styled","Container","children","getValidationSchema","yup","shape","name","required","matches","number","selectFilter","state","filter","value","selectIsLoading","contacts","isLoading","selectError","error","selectVisibleContacts","createSelector","items","normalizedFilter","toLowerCase","contact","includes","FormPhonebook","ContactsForm","useSelector","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","actions","checkName","some","item","checkPhone","parseInt","replace","resetForm","window","alert","addContact","handleSubmit","TextField","id","label","type","fullWidth","size","style","marginBottom","onChange","handleChange","touched","Boolean","errors","helperText","Button","color","marginTop","textTransform","variant","List","ItemContact","ContactData","ContactsListItem","href","fontSize","marginLeft","onClick","deleteContact","Text","IsEmpty","ContactsList","length","map","ComponentContainer","Filter","e","setStatusFilter","currentTarget","width","Error","ErrorText","Tittle","SecondTittle","useEffect","fetchContacts","LinearProgress"],"sourceRoot":""}