{"version":3,"file":"static/js/454.8be788b1.chunk.js","mappings":"4MAEaA,E,QAAgBC,GAAAA,IAAH,8Q,UCAbC,EAAkC,WAK7C,OAAOC,EAAAA,KAAaC,MAAM,CACxBC,KAAMF,EAAAA,KAAaG,OAAOC,SAAS,gCACnCC,MAAOL,EAAAA,KAEJG,OACAC,WACAE,QATH,wEAEA,uJAQAC,SAAUP,EAAAA,KAAaQ,IAAI,GAAGJ,YAEjC,E,iDCTYK,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbZ,KAAM,GACNG,MAAO,GACPE,SAAU,IAEZQ,iBAAkBhB,EAClBiB,SAAU,SAACC,EAAQC,GACjBR,GAASS,EAAAA,EAAAA,IAASF,IAClBC,EAAQE,WACT,IAGH,OACE,SAACvB,EAAD,WACE,kBAAMmB,SAAUJ,EAAOS,aAAvB,WACE,SAACC,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,QACLC,GAAG,OACHvB,KAAK,OACLwB,MAAO,CAAEC,aAAc,QACvBC,MAAM,WACNC,KAAK,OACLC,aAAa,OACbC,MAAOnB,EAAOK,OAAOf,KACrB8B,SAAUpB,EAAOqB,aACjBC,MAAOtB,EAAOuB,QAAQjC,MAAQkC,QAAQxB,EAAOyB,OAAOnC,MACpDoC,WAAY1B,EAAOuB,QAAQjC,MAAQU,EAAOyB,OAAOnC,QAEnD,SAACoB,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,QACLC,GAAG,QACHvB,KAAK,QACLwB,MAAO,CAAEC,aAAc,QACvBC,MAAM,QACNC,KAAK,QACLC,aAAa,QACbC,MAAOnB,EAAOK,OAAOZ,MACrB2B,SAAUpB,EAAOqB,aACjBC,MAAOtB,EAAOuB,QAAQ9B,OAAS+B,QAAQxB,EAAOyB,OAAOhC,OACrDiC,WAAY1B,EAAOuB,QAAQ9B,OAASO,EAAOyB,OAAOhC,SAEpD,SAACiB,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,QACLC,GAAG,WACHvB,KAAK,WACL0B,MAAM,WACNC,KAAK,WACLC,aAAa,eACbJ,MAAO,CAAEC,aAAc,QACvBI,MAAOnB,EAAOK,OAAOV,SACrByB,SAAUpB,EAAOqB,aACjBC,MAAOtB,EAAOuB,QAAQ5B,UAAY6B,QAAQxB,EAAOyB,OAAO9B,UACxD+B,WAAY1B,EAAOuB,QAAQ5B,UAAYK,EAAOyB,OAAO9B,YAEvD,SAACgC,EAAA,EAAD,CACEC,MAAM,UACNd,MAAO,CAAEe,UAAW,OAAQC,cAAe,QAC3CC,QAAQ,YACRpB,WAAS,EACTM,KAAK,SALP,0BAYP,ECzED,EAJiB,WACf,OAAO,SAACpB,EAAD,GACR,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/utils/getValitadionSchemaRegisterForm.js","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormPhonebook = styled.div`\n  margin: 20px 0;\n  width: 420px;\n  margin-right: auto;\n  margin-left: auto;\n  padding-left: 41px;\n  padding-right: 41px;\n  padding-top: 41px;\n  padding-bottom: 41px;\n  border: 0.4px solid rgba(25, 118, 210, 0.5);\n  border-radius: 4px;\n`;\n\n\n","import * as yup from 'yup';\n\nexport const getValitadionSchemaRegisterForm = () => {\n  const emailRegExp =\n    /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/;\n  const emailValidationText =\n    'a valid email address has 4 parts: recipient name (John2), @ symbol, domain name (gmail), top-level domain (.com). For example: \"John52@gmail.com\".';\n  return yup.object().shape({\n    name: yup.string().trim().required('username is a required field'),\n    email: yup\n      .string()\n      .trim()\n      .required()\n      .matches(emailRegExp, emailValidationText),\n    password: yup.string().min(7).required(),\n  });\n};\n","import { useFormik } from 'formik';\nimport { FormPhonebook } from './RegisterForm.styled';\nimport { getValitadionSchemaRegisterForm } from '../utils/getValitadionSchemaRegisterForm';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Button, TextField } from '@mui/material';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: getValitadionSchemaRegisterForm,\n    onSubmit: (values, actions) => {\n      dispatch(register(values));\n      actions.resetForm();\n    },\n  });\n\n  return (\n    <FormPhonebook>\n      <form onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          size=\"small\"\n          id=\"name\"\n          name=\"name\"\n          style={{ marginBottom: '20px' }}\n          label=\"Username\"\n          type=\"text\"\n          autoComplete=\"name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n        <TextField\n          fullWidth\n          size=\"small\"\n          id=\"email\"\n          name=\"email\"\n          style={{ marginBottom: '20px' }}\n          label=\"Email\"\n          type=\"email\"\n          autoComplete=\"email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          fullWidth\n          size=\"small\"\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          autoComplete='new-password'\n          style={{ marginBottom: '20px' }}\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button\n          color=\"primary\"\n          style={{ marginTop: '10px', textTransform: 'none' }}\n          variant=\"contained\"\n          fullWidth\n          type=\"submit\"\n        >\n          Register\n        </Button>\n      </form>\n    </FormPhonebook>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return <RegisterForm />;\n};\n\nexport default Register;\n"],"names":["FormPhonebook","styled","getValitadionSchemaRegisterForm","yup","shape","name","trim","required","email","matches","password","min","RegisterForm","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","handleSubmit","TextField","fullWidth","size","id","style","marginBottom","label","type","autoComplete","value","onChange","handleChange","error","touched","Boolean","errors","helperText","Button","color","marginTop","textTransform","variant"],"sourceRoot":""}