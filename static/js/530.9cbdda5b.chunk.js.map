{"version":3,"file":"static/js/530.9cbdda5b.chunk.js","mappings":"6MAEaA,E,QAAMC,GAAAA,IAAH,8Q,UCAHC,EAA+B,WAK1C,OAAOC,EAAAA,KAAaC,MAAM,CACxBC,MAAOF,EAAAA,KAEJG,OACAC,WACAC,QARH,wEAEA,wJAOAC,SAAUN,EAAAA,KAAaO,IAAI,GAAGH,YAEjC,E,iDCRYI,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbX,MAAO,GACPI,SAAU,IAEZQ,iBAAkBf,EAClBgB,SAAU,SAACC,EAAQC,GACjBR,GAASS,EAAAA,EAAAA,IAAMF,IACfC,EAAQE,WACT,IAGH,OACE,SAACtB,EAAD,WACE,kBAAMkB,SAAUJ,EAAOS,aAAvB,WACE,SAACC,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,QACLC,GAAG,QACHC,KAAK,QACLC,MAAO,CAAEC,aAAc,QACvBC,MAAM,QACNC,KAAK,QACLC,aAAa,QACbC,MAAOpB,EAAOK,OAAOd,MACrB8B,SAAUrB,EAAOsB,aACjBC,MAAOvB,EAAOwB,QAAQjC,OAASkC,QAAQzB,EAAO0B,OAAOnC,OACrDoC,WAAY3B,EAAOwB,QAAQjC,OAASS,EAAO0B,OAAOnC,SAEpD,SAACmB,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,QACLC,GAAG,WACHC,KAAK,WACLG,MAAM,WACNC,KAAK,WACLC,aAAa,mBACbJ,MAAO,CAAEC,aAAc,QACvBI,MAAOpB,EAAOK,OAAOV,SACrB0B,SAAUrB,EAAOsB,aACjBC,MAAOvB,EAAOwB,QAAQ7B,UAAY8B,QAAQzB,EAAO0B,OAAO/B,UACxDgC,WAAY3B,EAAOwB,QAAQ7B,UAAYK,EAAO0B,OAAO/B,YAEvD,SAACiC,EAAA,EAAD,CACEC,MAAM,UACNd,MAAO,CAAEe,UAAW,OAAQC,cAAe,QAC3CC,QAAQ,YACRrB,WAAS,EACTO,KAAK,SALP,wBAYP,E,UClDD,EAXc,WACZ,OACE,4BACE,SAAC,KAAD,WACE,wCAEF,SAACrB,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/utils/getValitadionSchemaLoginForm.js","components/LoginForm/LoginForm.jsx","pages/Login.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Box = styled.div`\n  margin: 20px 0;\n  width: 420px;\n  margin-right: auto;\n  margin-left: auto;\n  padding-left: 41px;\n  padding-right: 41px;\n  padding-top: 41px;\n  padding-bottom: 41px;\n  border: 0.4px solid rgba(25, 118, 210, 0.5);\n  border-radius: 4px;\n`;\n","import * as yup from 'yup';\n\nexport const getValitadionSchemaLoginForm = () => {\n  const emailRegExp =\n    /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/;\n  const emailValidationText =\n    'a valid email address has 4 parts: recipient name (John52), @ symbol, domain name (gmail), top-level domain (.com). For example: \"John52@gmail.com\".';\n  return yup.object().shape({\n    email: yup\n      .string()\n      .trim()\n      .required()\n      .matches(emailRegExp, emailValidationText),\n    password: yup.string().min(7).required(),\n  });\n};\n","import { useFormik } from 'formik';\nimport { Box } from './LoginForm.styled';\nimport { getValitadionSchemaLoginForm } from '../utils/getValitadionSchemaLoginForm';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { Button, TextField } from '@mui/material';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: getValitadionSchemaLoginForm,\n    onSubmit: (values, actions) => {\n      dispatch(logIn(values));\n      actions.resetForm();\n    },\n  });\n\n  return (\n    <Box>\n      <form onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          size=\"small\"\n          id=\"email\"\n          name=\"email\"\n          style={{ marginBottom: '20px' }}\n          label=\"Email\"\n          type=\"email\"\n          autoComplete=\"email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          fullWidth\n          size=\"small\"\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          autoComplete='current-password'\n          style={{ marginBottom: '20px' }}\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button\n          color=\"primary\"\n          style={{ marginTop: '10px', textTransform: 'none' }}\n          variant=\"contained\"\n          fullWidth\n          type=\"submit\"\n        >\n          Log In\n        </Button>\n      </form>\n    </Box>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { Helmet } from 'react-helmet-async';\n\nconst Login = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["Box","styled","getValitadionSchemaLoginForm","yup","shape","email","trim","required","matches","password","min","LoginForm","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","actions","logIn","resetForm","handleSubmit","TextField","fullWidth","size","id","name","style","marginBottom","label","type","autoComplete","value","onChange","handleChange","error","touched","Boolean","errors","helperText","Button","color","marginTop","textTransform","variant"],"sourceRoot":""}