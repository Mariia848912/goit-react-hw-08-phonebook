{"version":3,"file":"static/js/454.da373d92.chunk.js","mappings":"sLAEaA,E,QAAMC,GAAAA,IAAH,mN,SCEHC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACrB,SAACH,EAAD,UAAMG,GADe,C,wGCFZH,EAAMC,EAAAA,GAAAA,IAAH,wPAcHG,EAAcH,EAAAA,GAAAA,GAAH,8N,UCdXI,EAAkC,WAK7C,OAAOC,EAAAA,KAAaC,MAAM,CACxBC,KAAMF,EAAAA,KAAaG,OAAOC,SAAS,gCACnCC,MAAOL,EAAAA,KAEJG,OACAC,SAAS,6BACTE,QATH,wEAEA,uJAQAC,SAAUP,EAAAA,KAAaQ,IAAI,GAAGJ,SAAS,iCAE1C,E,2DCRYK,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbZ,KAAM,GACNG,MAAO,GACPE,SAAU,IAEZQ,iBAAkBhB,EAClBiB,SAAU,SAACC,EAAQC,GACjBR,GAASS,EAAAA,EAAAA,IAASF,IAClBC,EAAQE,WACT,IAGH,OACE,UAACxB,EAAA,EAAD,YACE,SAACE,EAAD,6BACA,SAACJ,EAAD,WACE,kBAAMsB,SAAUJ,EAAOS,aAAvB,WACE,SAACC,EAAA,EAAD,CACEC,GAAG,OACHrB,KAAK,OACLsB,MAAM,WACNC,KAAK,OACLC,aAAa,OACbC,WAAS,EACTC,KAAK,QACLC,MAAO,CAAEC,aAAc,QACvBC,MAAOnB,EAAOK,OAAOf,KACrB8B,SAAUpB,EAAOqB,aACjBC,MAAOtB,EAAOuB,QAAQjC,MAAQkC,QAAQxB,EAAOyB,OAAOnC,MACpDoC,WAAY1B,EAAOuB,QAAQjC,MAAQU,EAAOyB,OAAOnC,QAEnD,SAACoB,EAAA,EAAD,CACEC,GAAG,QACHrB,KAAK,QACLsB,MAAM,QACNC,KAAK,QACLC,aAAa,QACbC,WAAS,EACTC,KAAK,QACLC,MAAO,CAAEC,aAAc,QACvBC,MAAOnB,EAAOK,OAAOZ,MACrB2B,SAAUpB,EAAOqB,aACjBC,MAAOtB,EAAOuB,QAAQ9B,OAAS+B,QAAQxB,EAAOyB,OAAOhC,OACrDiC,WAAY1B,EAAOuB,QAAQ9B,OAASO,EAAOyB,OAAOhC,SAEpD,SAACiB,EAAA,EAAD,CACEC,GAAG,WACHrB,KAAK,WACLsB,MAAM,WACNC,KAAK,WACLC,aAAa,eACbC,WAAS,EACTC,KAAK,QACLC,MAAO,CAAEC,aAAc,QACvBC,MAAOnB,EAAOK,OAAOV,SACrByB,SAAUpB,EAAOqB,aACjBC,MAAOtB,EAAOuB,QAAQ5B,UAAY6B,QAAQxB,EAAOyB,OAAO9B,UACxD+B,WAAY1B,EAAOuB,QAAQ5B,UAAYK,EAAOyB,OAAO9B,YAEvD,SAACgC,EAAA,EAAD,CACEC,MAAM,UACNX,MAAO,CAAEY,UAAW,OAAQC,cAAe,QAC3CC,QAAQ,YACRhB,WAAS,EACTF,KAAK,SALP,6BAaT,EC7ED,EAJiB,WACf,OAAO,SAAChB,EAAD,GACR,C","sources":["components/Container/Container.styled.jsx","components/Container/Container.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/utils/getValitadionSchemaRegisterForm.js","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Box = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  padding: 0 16px;\n  padding-bottom: 16px;\n\n  text-align: center;\n\n  @media screen and (min-width: 452px) {\n    max-width: 452px;\n  }\n`;\n","\nimport PropTypes from 'prop-types';\nimport { Box } from \"./Container.styled\";\n\nexport const Container = ({ children }) => (\n    <Box>{children}</Box>\n)\n\nContainer.propTypes = {\n    children: PropTypes.node.isRequired\n}","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  margin: 20px 0;\n  margin-right: auto;\n  margin-left: auto;\n  padding: 20px;\n\n  border: 0.4px solid rgba(25, 118, 210, 0.5);\n  border-radius: 4px;\n\n  @media screen and (min-width: 452px) {\n    padding: 41px;\n  }\n`;\n\nexport const HiddenTitle = styled.h2`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n","import * as yup from 'yup';\n\nexport const getValitadionSchemaRegisterForm = () => {\n  const emailRegExp =\n    /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/;\n  const emailValidationText =\n    'A valid email address has 4 parts: recipient name (John2), @ symbol, domain name (gmail), top-level domain (.com). For example: \"John52@gmail.com\".';\n  return yup.object().shape({\n    name: yup.string().trim().required('Username is a required field'),\n    email: yup\n      .string()\n      .trim()\n      .required('Email is a required field')\n      .matches(emailRegExp, emailValidationText),\n    password: yup.string().min(7).required('Password is a required field'),\n  });\n};\n","import { useFormik } from 'formik';\nimport { Box, HiddenTitle } from './RegisterForm.styled';\nimport { getValitadionSchemaRegisterForm } from '../utils/getValitadionSchemaRegisterForm';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Button, TextField } from '@mui/material';\nimport { Container } from 'components/Container/Container';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: getValitadionSchemaRegisterForm,\n    onSubmit: (values, actions) => {\n      dispatch(register(values));\n      actions.resetForm();\n    },\n  });\n\n  return (\n    <Container>\n      <HiddenTitle>Register form</HiddenTitle>\n      <Box>\n        <form onSubmit={formik.handleSubmit}>\n          <TextField\n            id=\"name\"\n            name=\"name\"\n            label=\"Username\"\n            type=\"text\"\n            autoComplete=\"name\"\n            fullWidth\n            size=\"small\"\n            style={{ marginBottom: '20px' }}\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n          />\n          <TextField\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            type=\"email\"\n            autoComplete=\"email\"\n            fullWidth\n            size=\"small\"\n            style={{ marginBottom: '20px' }}\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <TextField\n            id=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            autoComplete=\"new-password\"\n            fullWidth\n            size=\"small\"\n            style={{ marginBottom: '20px' }}\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n          <Button\n            color=\"primary\"\n            style={{ marginTop: '10px', textTransform: 'none' }}\n            variant=\"contained\"\n            fullWidth\n            type=\"submit\"\n          >\n            Register\n          </Button>\n        </form>\n      </Box>\n    </Container>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return <RegisterForm />;\n};\n\nexport default Register;\n"],"names":["Box","styled","Container","children","HiddenTitle","getValitadionSchemaRegisterForm","yup","shape","name","trim","required","email","matches","password","min","RegisterForm","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","handleSubmit","TextField","id","label","type","autoComplete","fullWidth","size","style","marginBottom","value","onChange","handleChange","error","touched","Boolean","errors","helperText","Button","color","marginTop","textTransform","variant"],"sourceRoot":""}